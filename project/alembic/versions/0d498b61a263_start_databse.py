"""Start databse

Revision ID: 0d498b61a263
Revises: 
Create Date: 2022-03-13 16:26:41.755229

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0d498b61a263'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_anual_earning_id', table_name='anual_earning')
    op.drop_table('anual_earning')
    op.drop_index('ix_country_id', table_name='country')
    op.drop_table('country')
    op.drop_index('ix_company_id', table_name='company')
    op.drop_table('company')
    op.drop_index('ix_quarterly_earning_id', table_name='quarterly_earning')
    op.drop_table('quarterly_earning')
    op.drop_index('ix_sector_id', table_name='sector')
    op.drop_table('sector')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sector',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('sector_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='sector_pkey'),
    sa.UniqueConstraint('name', name='sector_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_sector_id', 'sector', ['id'], unique=False)
    op.create_table('quarterly_earning',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('fiscal_date_ending', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('reported_eps', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('estimated_eps', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('surprise', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('surprice_percentage', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('compani_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['compani_id'], ['country.id'], name='quarterly_earning_compani_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='quarterly_earning_pkey')
    )
    op.create_index('ix_quarterly_earning_id', 'quarterly_earning', ['id'], unique=False)
    op.create_table('company',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sector_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], name='company_country_id_fkey'),
    sa.ForeignKeyConstraint(['sector_id'], ['sector.id'], name='company_sector_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='company_pkey'),
    sa.UniqueConstraint('symbol', name='company_symbol_key')
    )
    op.create_index('ix_company_id', 'company', ['id'], unique=False)
    op.create_table('country',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('country_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='country_pkey'),
    sa.UniqueConstraint('name', name='country_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_country_id', 'country', ['id'], unique=False)
    op.create_table('anual_earning',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('fiscal_date_ending', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('reported_eps', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('compani_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['compani_id'], ['country.id'], name='anual_earning_compani_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='anual_earning_pkey')
    )
    op.create_index('ix_anual_earning_id', 'anual_earning', ['id'], unique=False)
    # ### end Alembic commands ###
